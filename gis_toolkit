
sudo apt-get install -y libprotobuf8

echo "deb https://dl.bintray.com/wangzw/deb trusty contrib" | sudo tee /etc/apt/sources.list.d/bintray-wangzw-deb.list
sudo apt-get install -y apt-transport-https
sudo apt-get update
sudo apt-get install libhdfs3 libhdfs3-dev


rm -rf /usr/local/var/postgres && initdb /usr/local/var/postgres -E utf8


Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?
    
    
https://qiita.com/ozo360/items/9cb8f00ada6317860f08

http://www.finds.jp/docs/pgisman/3.0.0/postgis-ja.html#PostGIS_Aggregate_Functions


!pip install urbanaccess pandana

cp -r lib/libproj.so.1* /opt/conda/lib

Successfully installed osmnet-0.1.5 pandana-0.4.4 tables-3.6.1 urbanaccess-0.2.0

https://github.com/cantzakas/postgis-demo
https://github.com/cantzakas/postgis-demo/blob/master/GEO-POSTGIS-SQL.md

https://github.com/dhamaniasad/awesome-postgres

sys.path.append('/opt/conda/share/qgis/python/plugins/')
sys.path.append('/opt/conda/share/qgis/python/')

searchTerm = "buffer"
for alg in QgsApplication.processingRegistry().algorithms():
    if searchTerm in alg.id():
        print(alg.id(), "--->", alg.displayName())

processing.algorithmHelp("native:buffer")

       
  
  
  qgisTerm = "native"
grassTerm = "grass"
gdalTerm = "gdal"
cntqgis  = 0
cntgrass = 0
cntgdal  = 0
for alg in QgsApplication.processingRegistry().algorithms():
    if qgisTerm in alg.id():
        cntqgis = cntqgis+1
        continue
        #print(cnt, alg.id(), "--->", alg.displayName())
    if grassTerm in alg.id():
        cntgrass = cntgrass+1
        continue
    if gdalTerm in alg.id():
        cntgdal = cntgdal+1
        continue

print ("The size of QGIS Algorithms is",cntqgis)
print ("The size of GRASS7 Algorithms is",cntgrass)
print ("The size of GDAL Algorithms is",cntgdal)
       

searchTerm = "shortestpath"
cnt = 0
for alg in QgsApplication.processingRegistry().algorithms():
    if searchTerm in alg.id():
        cnt = cnt+1
        print(cnt, alg.id(), "--->", alg.displayName())
        
       
       


https://medium.com/@cantzakas/bring-native-psql-magic-into-jupyter-notebook-50b663d856b5

https://benit.github.io/blog/2017/09/28/postgresql-survival-sheet/


https://docs.pgrouting.org/latest/en/pgRouting-installation.html


conda create -n postgres_env python=3.7 postgresql postgis osmnx  qgis

conda activate postgres_env

conda install geopands datashader rtree shapeply numpy matplotlib

